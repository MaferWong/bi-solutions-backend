// <auto-generated />
using BISolutions.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BISolutions.Migrations
{
    [DbContext(typeof(BISolutionsDataContext))]
    [Migration("20211004060441_Migration2")]
    partial class Migration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BISolutions.Models.Reporte", b =>
                {
                    b.Property<int>("reporte_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("reporte_URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("reporte_activo")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("reporte_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("reporte_id");

                    b.ToTable("Reporte", "dbo");
                });

            modelBuilder.Entity("BISolutions.Models.Reporte_Rol", b =>
                {
                    b.Property<int>("reporte_rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("reporte_id")
                        .HasColumnType("int");

                    b.Property<int>("rol_id")
                        .HasColumnType("int");

                    b.HasKey("reporte_rol_id");

                    b.HasIndex("reporte_id");

                    b.HasIndex("rol_id");

                    b.ToTable("Reporte_Rol", "dbo");
                });

            modelBuilder.Entity("BISolutions.Models.Rol", b =>
                {
                    b.Property<int>("rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("rol_descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rol_id");

                    b.ToTable("Rol", "dbo");
                });

            modelBuilder.Entity("BISolutions.Models.Usuario", b =>
                {
                    b.Property<int>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("usuario_contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario_correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuario_rol_id")
                        .HasColumnType("int");

                    b.Property<string>("usuario_sal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuario_id");

                    b.HasIndex("usuario_rol_id");

                    b.ToTable("Usuario", "dbo");
                });

            modelBuilder.Entity("BISolutions.Models.Reporte_Rol", b =>
                {
                    b.HasOne("BISolutions.Models.Reporte", "Reporte")
                        .WithMany("Reportes_Roles")
                        .HasForeignKey("reporte_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BISolutions.Models.Rol", "Rol")
                        .WithMany("Reportes_Roles")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reporte");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BISolutions.Models.Usuario", b =>
                {
                    b.HasOne("BISolutions.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("usuario_rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("BISolutions.Models.Reporte", b =>
                {
                    b.Navigation("Reportes_Roles");
                });

            modelBuilder.Entity("BISolutions.Models.Rol", b =>
                {
                    b.Navigation("Reportes_Roles");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
